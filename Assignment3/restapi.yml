swagger: "2.0"
info:
  description: "restapi"
  version: "1.0.0"
  title: "Swagger"
  termsOfService: "http://swagger.io/terms/"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "xxx.swagger.io"
basePath: "/v2"
schemes:
- "http"
paths:
  /modify/:
    post:
        tags:
        - "player"
        summary: "modify players"
        description: "modify players"
        operationId: "modifyPlayers"
        parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/ModifiedPlayer"
        responses:
          200:
            description: "successful operation"
            schema:
              $ref: "#/definitions/Player"    
  /create/:
    post:
        tags:
        - "player"
        summary: "add players"
        description: "add players"
        operationId: "createPlayers"
        parameters:
        - in: "body"
          name: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/NewPlayer"
        responses:
          200:
            description: "successful operation"
            schema:
              $ref: "#/definitions/NewPlayer"
  /getAll/:
      get:
        tags:
        - "player"
        summary: "Get players"
        description: "Returns all players"
        operationId: "getPlayers"
        produces:
        - "application/xml"
        - "application/json"
        responses:
          200:
            description: "successful operation"
            schema:
              $ref: "#/definitions/Player"
          400:
            description: "Invalid ID supplied"
          404:
            description: "player not found"  
  /get/{playerId}:
    get:
      tags:
      - "player"
      summary: "Find player by ID"
      description: "Returns a single player"
      operationId: "getPlayerById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "playerId"
        in: "path"
        description: "ID of player to return"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Player"
        400:
          description: "Invalid ID supplied"
        404:
          description: "player not found"
    post:
      tags:
      - "player"
      summary: "Updates a player in the store with form data"
      description: ""
      operationId: "updatePlayerWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "playerId"
        in: "path"
        description: "ID of player that needs to be updated"
        required: true
        type: "integer"
        format: "int32"
      - name: "name"
        in: "formData"
        description: "Updated name of the pet"
        required: false
        type: "string"
      - name: "status"
        in: "formData"
        description: "Updated status of the pet"
        required: false
        type: "string"
      responses:
        405:
          description: "Invalid input"
    delete:
      tags:
      - "player"
      summary: "Deletes a player"
      description: ""
      operationId: "deletePlayer"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "playerId"
        in: "path"
        description: "player id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "player not found"
definitions:
  NewItem:
    type: "object"
    properties:
      Level:
        type: "integer"
        format: "int32"
      Type:
        type: "string"
      CreationDate:
        type: "string"
        format: "date-time"
    xml:
      name: "NewItem"
  Player:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      score:
        type: "integer"
        format: "int32"
      level:
        type: "integer"
        format: "int32"
      creationTime:
        type: "string"
        format: "date-time"
      isBanned:
        type: "boolean"
        default: false
    xml:
      name: "Player"
  NewPlayer:
    type: "object"
    properties:
      name:
        type: "string"
    xml:
      name: "NewPlayer"
  ModifiedPlayer:
    type: "object"
    properties:
      Score:
        type: "integer"
        format: "int32"
    xml:
      name: "ModifiedPlayer"